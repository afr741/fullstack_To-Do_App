{"ast":null,"code":"var _jsxFileName = \"/Users/guest/fullstack_app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    };\n\n    this.getDataFromDb = () => {\n      fetch('http://localhost:3001/api/getData').then(data => data.json()).then(res => this.setState({\n        data: res.data\n      }));\n    };\n\n    this.putDataToDB = message => {\n      let currentIds = this.state.data.map(data => data.id);\n      let idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      axios.post('http://localhost:3001/api/putData', {\n        id: idToBeAdded,\n        message: message\n      });\n    };\n\n    this.deleteFromDB = idToDelete => {\n      parseInt(idToDelete);\n      let objIdToDelete = null;\n      this.state.data.forEach(dat => {\n        if (dat.id == idToDelete) {\n          objIdToDelete = data.id;\n        }\n      });\n      axios.delete('http://localhost:3001/api/deleteData', {\n        data: {\n          id: objIdToDelete\n        }\n      });\n    };\n\n    this.updateDB = (idToUpdate, updateToApply) => {\n      let objIdToUpdate = null;\n      parseInt(idToUpdate);\n      this.state.data.forEach(dat => {\n        if (dat.id == idToUpdate) {\n          objectToUpdate == dat.id;\n        }\n      });\n      axios.post('http://localhost:3001/api/updateData', {\n        id: objIdToUpdate,\n        update: message\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  }\n\n  componentWillMount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" I am ready to use the back end APIS :-) \");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guest/fullstack_app/client/src/App.js"],"names":["React","Component","axios","App","state","data","id","message","intervalIsSet","idToDelete","idToUpdate","objectToUpdate","getDataFromDb","fetch","then","json","res","setState","putDataToDB","currentIds","map","idToBeAdded","includes","post","deleteFromDB","parseInt","objIdToDelete","forEach","dat","delete","updateDB","updateToApply","objIdToUpdate","update","componentDidMount","interval","setInterval","componentWillMount","clearInterval","render"],"mappings":"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","sourcesContent":["import React, {Component}  from 'react';\nimport axios from 'axios';\nclass App extends Component {\n\nstate = {\n  data: [],\n  id:0,\n  message: null,\n  intervalIsSet: false,\n  idToDelete:null,\n  idToUpdate:null,\n  objectToUpdate:null\n};\ncomponentDidMount(){\n  this.getDataFromDb();\n  if(!this.state.intervalIsSet){\n    let interval = setInterval(this.getDataFromDb, 1000);\n    this.setState({intervalIsSet: interval});\n\n  }\n}\ncomponentWillMount(){\n  if(this.state.intervalIsSet){\n    clearInterval(this.state.intervalIsSet);\n    this.setState({intervalIsSet:null});\n  }\n}\n\ngetDataFromDb=()=>{\n  fetch('http://localhost:3001/api/getData')\n    .then((data)=> data.json())\n    .then((res)=> this.setState({data: res.data }));\n}\n\nputDataToDB=(message)=>{\n  let currentIds = this.state.data.map((data)=>data.id);\n  let idToBeAdded = 0;\n  while (currentIds.includes(idToBeAdded)){\n    ++idToBeAdded;\n  }\n\n  axios.post('http://localhost:3001/api/putData', {\n    id: idToBeAdded,\n    message: message,\n  });\n};\n\ndeleteFromDB = (idToDelete)=>{\n  parseInt(idToDelete);\n  let objIdToDelete = null;\n  this.state.data.forEach(\n    (dat) => {\n      if(dat.id ==idToDelete){\n        objIdToDelete = data.id;\n      }\n    }\n  );\n  axios.delete('http://localhost:3001/api/deleteData',{\n    data:{\n      id: objIdToDelete,\n    },\n  });\n};\n\n\nupdateDB= (idToUpdate, updateToApply) =>{\n  let objIdToUpdate = null;\n  parseInt(idToUpdate);\n  this.state.data.forEach(\n    (dat)=>{\n      if(dat.id ==idToUpdate){\n        objectToUpdate ==dat.id;\n      }\n\n  });\n\n  axios.post('http://localhost:3001/api/updateData', {\n    id: objIdToUpdate,\n    update: (message:updateToApply),\n  });\n};\n\n\n  render(){\n\n    return (  <div> I am ready to use the back end APIS :-) </div>)\n\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}